<apex:page applyBodyTag="false" applyHtmlTag="false" showHeader="false" standardStylesheets="false" docType="html-5.0">
    <script type="text/javascript">
    
    var ltng_origin = "{!$CurrentPage.Parameters.ltng_origin}";
    var ltng_url = "{!$CurrentPage.Parameters.ltng_url}";
    var _uid = "{!$CurrentPage.Parameters.ltng_uid}";
    
    window.addEventListener("message", messageHandler, true);
    var json = JSON.stringify({type: "ready", uid: _uid});
    window.parent.postMessage(json, "{!$CurrentPage.Parameters.ltng_origin}");
    
    function messageHandler(event) {
        if (event.origin === "{!$CurrentPage.Parameters.ltng_origin}") {
            event.preventDefault();
            event.stopPropagation();
            
            var data = JSON.parse(event.data);
            var type = data.type;
            var uid = data.uid;
            
            if (type === "request" && _uid === uid) {
                sendRequest(data.config);
            } else if (type === "handshake") {
                handshake(data.config);    
            } else if (type === "subscribe") {
                subscribe(data.config);    
            } else if (type === "unsubscribe") {
                unsubscribe(data.config);
            }
        }
    }
    
    function createRequest() {
        var xhr = null;
        if (window.XMLHttpRequest) {
            xhr = new XMLHttpRequest();
        } else if (window.ActiveXObject) {
            xhr = new ActiveXObject("Microsoft.XMLHTTP");
        }
        return xhr;
    }            
    
    function sendRequest(config) {
        //console.warn('config: ', config);
        var req = createRequest();
        
        req.onreadystatechange = function() {
            if (req.readyState != 4) {
                return;
            }
            
            var response = {};
            
            if (req.status < 200 || req.status > 299) {
                response = {
                    status: req.status,
                    statusText: req.statusText,
                    body: req.response,
                    type: req.responseType,                    
                    headers: req.getAllResponseHeaders(),
                    config: config
                };
            } else {                
                response = {
                    status: req.status,
                    statusText: req.statusText,
                    body: req.response,
                    type: req.responseType,
                    headers: req.getAllResponseHeaders(),
                    config: config
                };
            }
            
            if (req.responseType === "xml") {
                response.xml = req.responseXML;
            }
            
            var json = JSON.stringify({type: "response", uid: _uid, response: response});
            window.parent.postMessage(json, ltng_origin);
        }
        
        if (config.url.indexOf("http") < 0) {
            req.open(config.method, config.url, true);
            // Set the Authorization header for local calls
            req.setRequestHeader("Authorization", 'Bearer {!$Api.Session_ID}');
            
        } else {
            // Use the proxy
            req.open(config.method, UserContext.siteUrlPrefix + "/services/proxy", true);
            
            //req.open(config.method, "https://adx-dev-ed.my.salesforce.com/services/proxy", true);
            
            // Set the endpoint accordingly for using the proxy
            req.setRequestHeader("SalesforceProxy-Endpoint", config.url);

            req.setRequestHeader("Authorization", 'Bearer {!$Api.Session_ID}');
            
        }


        if (config.headers) {
            for (var key in config.headers) {
                req.setRequestHeader(key, config.headers[key]);
            }
        }
        
        // Not necessary when using proxy?
        //req.setRequestHeader("Access-Control-Allow-Origin", "*");
        

        req.setRequestHeader("Content-Type", "application/json");

        req.setRequestHeader("Accept", config.responseType || "application/json");
        
        if (config.method !== "POST") {
            req.responseType = config.responseType || "json";
        }
            
        if (config.body ) {
            //console.warn('vfproxy POSTING config.body: ', config.body);
            req.send(config.body);
        } else {
            req.send();
        }
        

    }
    </script>
</apex:page>